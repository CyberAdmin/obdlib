"""
<Program>
  obd.r2py 
  
<Date Started>
  June 23rd, 2014
	
<Author>
  Mike Reininger
	
<Purpose>
  Demo script to pull OBD data from the Android.
  Uses obdlib.repy to read OBD-II data from vehicle.
  
<Usage>
  How to run this program:

  1. upload obdlib.repy
  2. upload sensorlib.repy
  3. upload dylink.repy
  4. upload obd.r2py
  5. startv2 dylink.repy obd.r2py

  OR user provides OBD IP and OBD port

  5. startv2 dylink.repy obd.r2py {OBD IP} {OBD port}
     ie. startv2 dylink.repy obd.r2py 192.168.0.10 35000 
"""
dy_import_module_symbols("sensorlib")
dy_import_module_symbols("obdlib")

"""
Start initialization.
"""
# Set sensor port. By default, use get_connectionport(), however, you can change the sensor port manually.
setSensorPort(get_connectionport())

#Initialization [required]
if len(callargs) < 2:
  # If user starts without giving obd ip and obd port, then do the default setup in obdlib.repy.
  defaultSetup()
else:
  # If user inputs custom obd ip and obd port, then do the custom setup in obdlib.repy.
  customSetup(callargs[0], callargs[1])

# Optional, however good practice, in case OBD sensor settings have been changed.
resetOBD()
setAutomaticProtocol()
"""
End initialization.
"""


"""
Start car sensor data retrieval.
"""
# Retrieve vehicular sensor values
log("\nCurrent location: ",getCurrentLocation())
# You can retrieve speed in KPH and then convert it to MPH using toMPH()
speed = getSpeed() #KPH

log("\nSpeed: ",speed," kph")
log("\nSpeed: ",toMPH(speed)," mph")

log("\nRPM: ",getRPM()," rpm")
log("\nMAF: ", getMAF()," grams/seconds")

log("\nThrottle position [0-100%]: ",getThrottlePosition(),"%")
log("\nFuel consumption ",getFuelConsumption()," mpg")
"""
End car sensor data retrieval.
"""
